scalar DateTime
  @specifiedBy(url: "https://scalars.graphql.org/andimarek/date-time")

type Review {
  id: ID
  author: User
  album_id: String
  title: String
  content: String
  rating: Float
  comments: [ReviewComment]
  date: DateTime
}

type ReviewWithAlbum {
  id: ID
  author: User
  album_id: String
  album: SpotifyAlbum
  title: String
  content: String
  rating: Float
  comments: [ReviewComment]
  date: DateTime
}

type UnpopulatedReview {
  id: ID
  author: String
  album_id: String
  title: String
  content: String
  rating: Float
  date: DateTime
}

type ReviewComment {
  author: User
  content: String
  date: DateTime
}

type Query {
  reviewById(id: ID!): ReviewWithAlbum
  reviewByAlbumId(album_id: String!): Review
  reviewsByAlbumId(album_id: String!): [Review]
  reviewsByUserId(user_id: ID!): [Review]
  reviewsMostRecent(limit: Int!): [ReviewWithAlbum]
  reviewsMostRecentCurrnetUser(limit: Int!): [ReviewWithAlbum]
}

type Mutation {
  createReview(album_id: String!, title: String!, content: String!, rating: Float!): Review
  createReviewComment(review_id: ID!, content: String!): ReviewComment
  updateReview(id: ID!, title: String, content: String, rating: Float): Review
  deleteReview(id: ID!): UnpopulatedReview
}